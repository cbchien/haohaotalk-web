export type Language = 'en' | 'zh'

export interface Translations {
  // Navigation
  navigation: {
    home: string
    search: string
    progress: string
    profile: string
  }

  // Scenarios
  scenarios: {
    loading: string
    noScenariosAvailable: string
  }

  // Authentication
  auth: {
    displayName: string
    email: string
    password: string
    continueAsGuest: string
    signIn: string
    createAccount: string
    continueWithGoogle: string
    alreadyHaveAccount: string
    createNewAccount: string
    accountCreatedSuccessfully: string
    signedInSuccessfully: string
    startFreshSession: string
    logout: string

    // Validation messages
    validation: {
      emailRequired: string
      emailInvalid: string
      passwordRequired: string
      passwordTooShort: string
      displayNameRequired: string
    }

    // Error messages
    errors: {
      authenticationFailed: string
      networkError: string
      googleOAuthNotConfigured: string
    }
  }

  // Profile
  profile: {
    guestAccount: string
    registeredAccount: string
    guestModeMessage: string
    clearSessionMessage: string
  }

  // Chat Settings
  chatSettings: {
    context: string
    objective: string
    roleSelection: string
    relationshipStrength: string
    startConversation: string
    preparing: string

    // Relationship levels
    relationship: {
      low: string
      normal: string
      high: string
    }

    // Error messages
    errors: {
      scenarioNotFound: string
      scenarioUnavailable: string
      scenarioLoadError: string
      scenarioNoLongerAvailable: string
      noPermissionToAccess: string
      networkError: string
      sessionCreationFailed: string
      invalidConfiguration: string
      pleaseLogin: string
      noPermission: string
      tooManySessions: string
      serverError: string
    }
  }

  // Chat Interface
  chat: {
    loading: string
    conversation: string
    connectionScore: string
    scenarioContext: string
    storyBackground: string
    typeResponse: string
    conversationComplete: string
    conversationCompleteMessage: string
    finalScore: string
    turnsCompleted: string
    viewDetailedResults: string
    practiceAgain: string
    backToHome: string
    practiceSessionEnded: string
    sessionEndError: string
    endSessionEarly: string
    endSessionConfirmTitle: string
    endSessionConfirmMessage: string
    endSessionConfirm: string
    cancel: string

    // Score messages
    score: {
      veryNegative: string
      negative: string
      neutral: string
      positive: string
      veryPositive: string
    }

    // Error messages
    errors: {
      sessionNotFound: string
      loadingFailed: string
      sendFailed: string
      networkError: string
    }
  }

  // Analytics
  analytics: {
    sessionInsights: string
    performanceComparison: string
    conversationAnalysis: string
    connectionProgression: string
    relativeToOthers: string
    compareWithOthers: string
    betterThanPercentage: string
    loadingChart: string
    completedSession: string
    practiceSession: string
    whatWentWell: string
    keyMoments: string
    thingsToTryNext: string
    conversationTurns: string
    relationshipStrength: string
    chartDataPreparing: string
    browseScenarios: string
    scoreRange: string
    userCount: string
    neutralDescription: string
    neutralDescriptionDetail: string
    expressEmotions: string
    expressEmotionsDetail: string
    clarifyNeeds: string
    clarifyNeedsDetail: string
    positiveResponse: string
    positiveResponseDetail: string
    understandNeeds: string
    understandNeedsDetail: string
  }

  // Common
  common: {
    goBack: string
    loading: string
    error: string
    retry: string
    next: string
  }
}

export const translations: Record<Language, Translations> = {
  en: {
    navigation: {
      home: 'Home',
      search: 'Search',
      progress: 'Progress',
      profile: 'Profile',
    },
    scenarios: {
      loading: 'Loading scenarios...',
      noScenariosAvailable: 'No scenarios available',
    },
    auth: {
      displayName: 'Display Name',
      email: 'Email',
      password: 'Password',
      continueAsGuest: 'Continue as Guest',
      signIn: 'Sign In',
      createAccount: 'Create Account',
      continueWithGoogle: 'Continue with Google',
      alreadyHaveAccount: 'Already have an account?',
      createNewAccount: 'Create new account',
      accountCreatedSuccessfully: 'Account created successfully!',
      signedInSuccessfully: 'Signed in successfully!',
      startFreshSession: 'Start Fresh Session',
      logout: 'Logout',
      validation: {
        emailRequired: 'Email is required',
        emailInvalid: 'Please enter a valid email address',
        passwordRequired: 'Password is required',
        passwordTooShort: 'Password must be at least 8 characters',
        displayNameRequired: 'Display name is required',
      },
      errors: {
        authenticationFailed: 'Authentication failed. Please try again.',
        networkError:
          'Network error. Please check your connection and try again.',
        googleOAuthNotConfigured: 'Google OAuth not configured',
      },
    },
    profile: {
      guestAccount: 'Guest Account',
      registeredAccount: 'Registered Account',
      guestModeMessage:
        "You're using guest mode. Create an account to save your progress!",
      clearSessionMessage:
        'This will clear your current session and start over',
    },
    chatSettings: {
      context: 'Context',
      objective: 'Objective',
      roleSelection: 'Role Selection',
      relationshipStrength: 'Relationship Strength',
      startConversation: 'Start Conversation',
      preparing: 'Preparing...',
      relationship: {
        low: 'Low',
        normal: 'Normal',
        high: 'High',
      },
      errors: {
        scenarioNotFound: 'Scenario not found',
        scenarioUnavailable: 'This scenario is temporarily unavailable',
        scenarioLoadError:
          'Unable to load scenario information. Please try again later.',
        scenarioNoLongerAvailable: 'This scenario is no longer available',
        noPermissionToAccess:
          "You don't have permission to access this scenario",
        networkError: 'Network error. Please try again.',
        sessionCreationFailed: 'Failed to create session',
        invalidConfiguration:
          'Invalid configuration. Please check your selections.',
        pleaseLogin: 'Please log in to start a practice session.',
        noPermission: "You don't have permission to access this scenario.",
        tooManySessions:
          'Too many sessions created. Please wait before starting another.',
        serverError: 'Server error. Please try again in a moment.',
      },
    },
    chat: {
      loading: 'Loading conversation...',
      conversation: 'Conversation',
      connectionScore: 'Connection Score',
      scenarioContext: 'This conversation simulates drama.',
      storyBackground: 'Story Background:',
      typeResponse: 'Type your response...',
      conversationComplete: 'Conversation Complete!',
      conversationCompleteMessage:
        'Great job practicing your conversation skills!',
      finalScore: 'Final Score',
      turnsCompleted: 'turns completed',
      viewDetailedResults: 'View Detailed Results',
      practiceAgain: 'Practice Again',
      backToHome: 'Back to Home',
      practiceSessionEnded:
        'üéâ Practice session complete! Saving your progress...',
      sessionEndError: '‚ö†Ô∏è Session ended, but failed to save progress.',
      endSessionEarly: 'End Session',
      endSessionConfirmTitle: 'End Session Early?',
      endSessionConfirmMessage:
        'Are you sure you want to end this practice session?',
      endSessionConfirm: 'End Session',
      cancel: 'Cancel',
      score: {
        veryNegative: 'Relationship strained',
        negative: 'Some tension present',
        neutral: 'Neutral interaction',
        positive: 'Building connection',
        veryPositive: 'Strong connection',
      },
      errors: {
        sessionNotFound: 'Session not found',
        loadingFailed: 'Failed to load conversation',
        sendFailed: 'Failed to send message',
        networkError: 'Network error. Please try again.',
      },
    },
    analytics: {
      sessionInsights: 'Session Insights',
      performanceComparison: 'Performance Comparison',
      conversationAnalysis: 'Conversation Analysis',
      connectionProgression: 'Connection Progression',
      relativeToOthers: 'Relative to Others',
      compareWithOthers: 'Compare with Others',
      betterThanPercentage: 'Better than {percentage}% of users',
      loadingChart: 'Loading chart...',
      completedSession: 'Completed Session',
      practiceSession: 'Practice Session',
      whatWentWell: 'What Went Well',
      keyMoments: 'Key Moments',
      thingsToTryNext: 'Things to Try Next',
      conversationTurns: 'Conversation Turns',
      relationshipStrength: 'Relationship Strength',
      chartDataPreparing: 'Chart data preparing',
      browseScenarios: 'Browse Scenarios',
      scoreRange: 'Score Range',
      userCount: 'User Count',
      neutralDescription: 'Use neutral descriptions instead of accusations',
      neutralDescriptionDetail:
        'Try: "When you ask what to do, I feel a bit lost because I waited for an hour" to reduce confrontational tone.',
      expressEmotions: 'Express emotions using "I feel"',
      expressEmotionsDetail:
        '"I feel pressed for time and unable to control my schedule, making me feel frustrated."',
      clarifyNeeds: 'Actively clarify your needs',
      clarifyNeedsDetail:
        '"If you might be late next time, I hope you can let me know in advance so I can adjust my schedule and not feel rushed."',
      positiveResponse: 'Respond positively to build trust',
      positiveResponseDetail:
        '"You willing to listen to me means a lot to me. I feel we had a good conversation."',
      understandNeeds: 'Understand underlying needs',
      understandNeedsDetail:
        'Try to express core needs during conversation, e.g., "What I really care about is our mutual respect and trust."',
    },
    common: {
      goBack: 'Go Back',
      loading: 'Loading...',
      error: 'Error',
      retry: 'Retry',
      next: 'Next',
    },
  },
  zh: {
    navigation: {
      home: 'È¶ñÈ†Å',
      search: 'ÊêúÂ∞ã',
      progress: 'Ê≠∑Âè≤',
      profile: 'ÊàëÁöÑ',
    },
    scenarios: {
      loading: 'ËºâÂÖ•ÊÉÖÂ¢É‰∏≠...',
      noScenariosAvailable: 'Ê≤íÊúâÂèØÁî®ÁöÑÊÉÖÂ¢É',
    },
    auth: {
      displayName: 'È°ØÁ§∫ÂêçÁ®±',
      email: 'ÈõªÂ≠êÈÉµ‰ª∂',
      password: 'ÂØÜÁ¢º',
      continueAsGuest: '‰ª•Ë®™ÂÆ¢Ë∫´‰ªΩÁπºÁ∫å',
      signIn: 'ÁôªÂÖ•',
      createAccount: 'Âª∫Á´ãÂ∏≥Êà∂',
      continueWithGoogle: '‰ΩøÁî® Google ÁπºÁ∫å',
      alreadyHaveAccount: 'Â∑≤ÊúâÂ∏≥Êà∂Ôºü',
      createNewAccount: 'Âª∫Á´ãÊñ∞Â∏≥Êà∂',
      accountCreatedSuccessfully: 'Â∏≥Êà∂Âª∫Á´ãÊàêÂäüÔºÅ',
      signedInSuccessfully: 'ÁôªÂÖ•ÊàêÂäüÔºÅ',
      startFreshSession: 'ÈñãÂßãÊñ∞ÁöÑÊúÉË©±',
      logout: 'ÁôªÂá∫',
      validation: {
        emailRequired: 'ÈõªÂ≠êÈÉµ‰ª∂ÁÇ∫ÂøÖÂ°´',
        emailInvalid: 'Ë´ãËº∏ÂÖ•ÊúâÊïàÁöÑÈõªÂ≠êÈÉµ‰ª∂Âú∞ÂùÄ',
        passwordRequired: 'ÂØÜÁ¢ºÁÇ∫ÂøÖÂ°´',
        passwordTooShort: 'ÂØÜÁ¢ºÂøÖÈ†àËá≥Â∞ë8ÂÄãÂ≠óÁ¨¶',
        displayNameRequired: 'È°ØÁ§∫ÂêçÁ®±ÁÇ∫ÂøÖÂ°´',
      },
      errors: {
        authenticationFailed: 'Ë∫´‰ªΩÈ©óË≠âÂ§±Êïó„ÄÇË´ãÈáçË©¶„ÄÇ',
        networkError: 'Á∂≤Ë∑ØÈåØË™§„ÄÇË´ãÊ™¢Êü•ÊÇ®ÁöÑÈÄ£Êé•‰∏¶ÈáçË©¶„ÄÇ',
        googleOAuthNotConfigured: 'Google OAuth Êú™ÈÖçÁΩÆ',
      },
    },
    profile: {
      guestAccount: 'Ë®™ÂÆ¢Â∏≥Êà∂',
      registeredAccount: 'Ë®ªÂÜäÂ∏≥Êà∂',
      guestModeMessage: 'ÊÇ®Ê≠£Âú®‰ΩøÁî®Ë®™ÂÆ¢Ê®°Âºè„ÄÇÂª∫Á´ãÂ∏≥Êà∂‰ª•‰øùÂ≠òÊÇ®ÁöÑÈÄ≤Â∫¶ÔºÅ',
      clearSessionMessage: 'ÈÄôÂ∞áÊ∏ÖÈô§ÊÇ®Áï∂ÂâçÁöÑÊúÉË©±‰∏¶ÈáçÊñ∞ÈñãÂßã',
    },
    chatSettings: {
      context: 'ÊÉÖÂ¢É',
      objective: '‰∏ªÈ°å',
      roleSelection: 'ËßíËâ≤ÈÅ∏Êìá',
      relationshipStrength: 'ÂΩºÊ≠§ÁöÑÈóú‰øÇÂº∑Â∫¶',
      startConversation: 'ÈñãÂßãÂ∞çË©±',
      preparing: 'Ê∫ñÂÇô‰∏≠...',
      relationship: {
        low: '‰Ωé',
        normal: 'ÊôÆÈÄö',
        high: 'È´ò',
      },
      errors: {
        scenarioNotFound: 'Êâæ‰∏çÂà∞Ê≠§ÊÉÖÂ¢É',
        scenarioUnavailable: 'Ê≠§ÊÉÖÂ¢ÉÊö´ÊôÇÁÑ°Ê≥ï‰ΩøÁî®',
        scenarioLoadError: 'ÁÑ°Ê≥ïËºâÂÖ•ÊÉÖÂ¢ÉË≥áË®äÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ',
        scenarioNoLongerAvailable: 'Ê≠§ÊÉÖÂ¢ÉÂ∑≤‰∏çÂ≠òÂú®',
        noPermissionToAccess: 'ÁÑ°Ê¨äÈôêÂ≠òÂèñÊ≠§ÊÉÖÂ¢É',
        networkError: 'Á∂≤Ë∑ØÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ',
        sessionCreationFailed: 'ÁÑ°Ê≥ïÂª∫Á´ãÂ∞çË©±',
        invalidConfiguration: 'ÈÖçÁΩÆÁÑ°ÊïàÔºåË´ãÊ™¢Êü•ÊÇ®ÁöÑÈÅ∏Êìá„ÄÇ',
        pleaseLogin: 'Ë´ãÁôªÂÖ•‰ª•ÈñãÂßãÁ∑¥ÁøíÂ∞çË©±„ÄÇ',
        noPermission: 'ÊÇ®ÁÑ°Ê¨äÈôêÂ≠òÂèñÊ≠§ÊÉÖÂ¢É„ÄÇ',
        tooManySessions: 'Âª∫Á´ãÂ∞çË©±Ê¨°Êï∏ÈÅéÂ§öÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ',
        serverError: '‰º∫ÊúçÂô®ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ',
      },
    },
    chat: {
      loading: 'ËºâÂÖ•Â∞çË©±‰∏≠...',
      conversation: 'Â∞çË©±',
      connectionScore: 'Èóú‰øÇ‰øÇ',
      scenarioContext: 'Êú¨Â∞çË©±Á¥îÂ±¨Ê®°Êì¨ÂäáÊÉÖ„ÄÇ',
      storyBackground: 'ÊïÖ‰∫ãËÉåÊôØÔºö',
      typeResponse: 'Ëº∏ÂÖ•ÂõûË¶Ü...',
      conversationComplete: 'Â∞çË©±ÂÆåÊàêÔºÅ',
      conversationCompleteMessage: 'ÂæàÊ£íÁöÑÂ∞çË©±Á∑¥ÁøíÔºÅ',
      finalScore: 'ÊúÄÁµÇÂàÜÊï∏',
      turnsCompleted: 'ÂõûÂêàÂÆåÊàê',
      viewDetailedResults: 'Êü•ÁúãË©≥Á¥∞ÁµêÊûú',
      practiceAgain: 'ÂÜçÊ¨°Á∑¥Áøí',
      backToHome: 'ÂõûÂà∞È¶ñÈ†Å',
      practiceSessionEnded: 'Á∑¥ÁøíÁµêÊùüÔºÅ',
      sessionEndError: 'Á∑¥ÁøíÁµêÊùüÔºå‰ΩÜ‰øùÂ≠òÈÄ≤Â∫¶Â§±Êïó„ÄÇ',
      endSessionEarly: 'ÁµêÊùüÊúÉË©±',
      endSessionConfirmTitle: 'ÊèêÂâçÁµêÊùüÊúÉË©±Ôºü',
      endSessionConfirmMessage: 'Á¢∫ÂÆöË¶ÅÁµêÊùüÊ≠§Á∑¥ÁøíÊúÉË©±ÂóéÔºü',
      endSessionConfirm: 'ÁµêÊùüÊúÉË©±',
      cancel: 'ÂèñÊ∂à',
      score: {
        veryNegative: 'Èóú‰øÇÁ∑äÂºµ',
        negative: 'Â≠òÂú®‰∏Ä‰∫õÁ∑äÂºµ',
        neutral: '‰∏≠ÊÄß‰∫íÂãï',
        positive: 'Âª∫Á´ãËÅØÁπ´',
        veryPositive: 'Ê∑±Â∫¶ÈÄ£Áµê',
      },
      errors: {
        sessionNotFound: 'Êâæ‰∏çÂà∞Â∞çË©±',
        loadingFailed: 'ËºâÂÖ•Â∞çË©±Â§±Êïó',
        sendFailed: 'ÁôºÈÄÅË®äÊÅØÂ§±Êïó',
        networkError: 'Á∂≤Ë∑ØÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ',
      },
    },
    analytics: {
      sessionInsights: 'Â∞çË©±Á∑¥ÁøíÁµêÊûú',
      performanceComparison: 'Áõ∏Â∞çÊñºÂÖ∂‰ªñÁ∑¥ÁøíÁöÑÁµêÊûú',
      conversationAnalysis: 'Â∞çË©±ÂàÜÊûê',
      connectionProgression: 'Â∞çË©±‰∏≠ÁöÑË∑ùÈõ¢',
      relativeToOthers: 'Áõ∏Â∞çÊñºÂÖ∂‰ªñÁ∑¥ÁøíÁöÑÁµêÊûú',
      compareWithOthers: 'ËàáÂÖ∂‰ªñÁî®Êà∂ÊØîËºÉ',
      betterThanPercentage: 'Ë∂ÖÈÅé {percentage}% ÁöÑÁî®Êà∂',
      loadingChart: 'ËºâÂÖ•ÂúñË°®‰∏≠...',
      completedSession: 'Â∑≤ÂÆåÊàêÁ∑¥Áøí',
      practiceSession: 'Á∑¥ÁøíÊúÉË©±',
      whatWentWell: 'ÂÅöÂæóÂæàÂ•ΩÁöÑÂú∞Êñπ',
      keyMoments: 'ÈóúÈçµÊôÇÂàª',
      thingsToTryNext: '‰∏ãÊ¨°ÂèØ‰ª•ÂòóË©¶',
      conversationTurns: 'Â∞çË©±ÂõûÂêà',
      relationshipStrength: 'Èóú‰øÇÂº∑Â∫¶',
      chartDataPreparing: 'ÂúñË°®Êï∏ÊìöÊ∫ñÂÇô‰∏≠',
      browseScenarios: 'Êé¢Á¥¢ÊÉÖÂ¢É',
      scoreRange: 'ÂàÜÊï∏ÁØÑÂúç',
      userCount: 'Áî®Êà∂Êï∏Èáè',
      neutralDescription: 'Áî®‰∏≠ÊÄßÊèèËø∞Âèñ‰ª£ÊÉÖÁ∑íÂºïÁàÜË©û',
      neutralDescriptionDetail:
        'ÂèØ‰ª•ÊîπÊàêÔºö„Äå‰Ω†‰∏Ä‰æÜÂ∞±ÂïèÊàëË¶ÅÂéªÂêÉ‰ªÄÈ∫ºÔºåÊàëÊúâÈªûÈåØÊÑïÔºåÂõ†ÁÇ∫ÊàëÁ≠â‰∫Ü‰∏ÄÂÄãÂ∞èÊôÇ„Äç‰æÜÈôç‰ΩéË°ùÁ™ÅÊÑü„ÄÇ',
      expressEmotions: 'ÂñÑÁî®„ÄåÊàëË®äÊÅØ„ÄçË°®ÈÅîÊÉÖÁ∑íËàáÂΩ±Èüø',
      expressEmotionsDetail:
        '„ÄåÊàëÊÑüË¶∫ÊôÇÈñìË¢´ËÄΩË™§‰∫ÜÔºåËÄåÊàëÊ≤íËÉΩÊéåÊè°Ëá™Â∑±ÁöÑÂÆâÊéíÔºåËÆìÊàëË¶∫ÂæóÊúâÈªûË¢´ÂøΩÁï•„ÄÇ„Äç',
      clarifyNeeds: '‰∏ªÂãïÈáêÊ∏ÖËá™Â∑±ÁöÑÈúÄÊ±Ç',
      clarifyNeedsDetail:
        '„ÄåÂ¶ÇÊûú‰Ω†‰∏ãÊ¨°ÂèØËÉΩÊúÉÈÅ≤Âà∞ÔºåÊàëÂ∏åÊúõ‰Ω†ÂèØ‰ª•ÊèêÂâçÂëäË®¥ÊàëÔºåÈÄôÊ®£ÊàëÂèØ‰ª•Ëá™Â∑±Ë™øÊï¥ÂÆâÊéíÔºå‰πü‰∏çÊúÉÈÄôÈ∫ºÁÑ¶Ë∫Å„ÄÇ„Äç',
      positiveResponse: 'ÈÅ©ÊôÇËÇØÂÆöÂ∞çÊñπÁöÑÂõûÊáâÔºåËÆìÊ∫ùÈÄöÂΩ¢ÊàêÊ≠£Âæ™Áí∞',
      positiveResponseDetail:
        '„Äå‰Ω†È°òÊÑèËÅΩÊàëË™™ÔºåÂ∞çÊàë‰æÜË™™ÁúüÁöÑÂæàÈáçË¶ÅÔºåÊàëÊÑüË¶∫ÊàëÂÄëÊúâÊääË©±Ë™™Èñã„ÄÇ„Äç',
      understandNeeds: 'Ëæ®Ë™ç„ÄåÊÉÖÁ∑íËÉåÂæåÁöÑÈúÄÊ±Ç„Äç',
      understandNeedsDetail:
        'Âú®Ê∫ùÈÄöÊôÇÂèØ‰ª•ÂòóË©¶Ë™™Âá∫ÈÄô‰∫õÊ†∏ÂøÉÈúÄÊ±ÇÔºå‰æãÂ¶ÇÔºö„ÄåÊàëÂÖ∂ÂØ¶ÊúÄÂú®ÊÑèÁöÑÊòØÊàëÂÄëÊúâÂΩºÊ≠§ÁöÑÂ∞äÈáçÂíå‰ø°‰ªªÊÑü„Äç„ÄÇ',
    },
    common: {
      goBack: 'ËøîÂõû',
      loading: 'ËºâÂÖ•‰∏≠...',
      error: 'ÈåØË™§',
      retry: 'ÈáçË©¶',
      next: '‰∏ã‰∏ÄÊ≠•',
    },
  },
}

export const useTranslation = (language: Language) => {
  return translations[language]
}
